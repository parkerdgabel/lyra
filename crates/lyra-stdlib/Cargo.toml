[package]
name = "lyra-stdlib"
edition.workspace = true
license.workspace = true
version.workspace = true

[dependencies]
lyra-runtime = { path = "../lyra-runtime" }
lyra-core = { path = "../lyra-core" }
lyra-parser = { path = "../lyra-parser" }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
rusqlite = { version = "0.31", optional = true, features = ["bundled"] }
duckdb = { version = "0.10", optional = true }
base64 = "0.21"
regex = "1"
chrono = { version = "0.4", default-features = false, features = ["clock"] }
reqwest = { version = "0.12", default-features = false, features = ["blocking","json","multipart","rustls-tls"], optional = true }
rustls = { version = "0.21", default-features = false, features = ["tls12"], optional = true }
rustls-pemfile = { version = "1", optional = true }
bollard = { version = "0.16", optional = true }
tokio = { version = "1", features = ["rt-multi-thread","macros","time"], optional = true }
futures-util = { version = "0.3", optional = true }
tar = { version = "0.4", optional = true }
bytes = { version = "1", optional = true }

[features]
default = ["core", "string", "math", "list", "assoc", "logic", "concurrency", "schema", "explain", "tools", "io", "dataset", "db", "containers"]
core = []
string = []
math = []
list = []
assoc = []
logic = []
concurrency = []
schema = []
explain = []
tools = []
testing = []
simd_kernels = []
big-real-rug = ["rug"]
io = []
net = []
net_https = ["net", "reqwest", "rustls", "rustls-pemfile"]
dataset = []
db = []
db_sqlite = ["dep:rusqlite"]
db_duckdb = ["dep:duckdb"]
containers = []
containers_docker = ["dep:bollard","dep:tokio","dep:futures-util","dep:tar","dep:bytes"]
containers_podman = []
containers_containerd = []
containers_k8s = []

[dependencies.rug]
optional = true
version = "1"
