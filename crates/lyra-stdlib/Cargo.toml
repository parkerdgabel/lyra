[package]
name = "lyra-stdlib"
edition.workspace = true
license.workspace = true
version.workspace = true

[dependencies]
lyra-runtime = { path = "../lyra-runtime" }
lyra-core = { path = "../lyra-core" }
lyra-parser = { path = "../lyra-parser" }
lyra-rewrite = { path = "../lyra-rewrite" }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { version = "0.9" }
toml = { version = "0.8" }
terminal_size = { version = "0.3" }
rusqlite = { version = "0.31", optional = true, features = ["bundled"] }
duckdb = { version = "0.10", optional = true }
base64 = "0.21"
regex = "1"
aho-corasick = { version = "1", optional = true }
ignore = { version = "0.4", optional = true }
chardetng = { version = "0.1", optional = true }
encoding_rs = { version = "0.8", optional = true }
chrono = { version = "0.4", default-features = false, features = ["clock"] }
cron = { version = "0.12", optional = true }
notify = { version = "5", optional = true }
reqwest = { version = "0.12", default-features = false, features = ["blocking","json","multipart","rustls-tls"], optional = true }
rustls = { version = "0.21", default-features = false, features = ["tls12"], optional = true }
rustls-pemfile = { version = "1", optional = true }
bollard = { version = "0.16", optional = true }
tokio = { version = "1", features = ["rt-multi-thread","macros","time"], optional = true }
futures-util = { version = "0.3", optional = true }
tar = { version = "0.4", optional = true }
zip = { version = "0.6", optional = true }
flate2 = { version = "1.0", optional = true, features = ["rust_backend"] }
bytes = { version = "1", optional = true }
blake3 = { version = "1", optional = true }
rand = { version = "0.8", optional = true }
pathdiff = "0.2"
chacha20poly1305 = { version = "0.10", features = ["std"], optional = true }
ed25519-dalek = { version = "2", features = ["rand_core"], optional = true }
rand_core = { version = "0.6", optional = true }
subtle = { version = "2", optional = true }
sha2 = { version = "0.10", optional = true }
hmac = { version = "0.12", optional = true }
hkdf = { version = "0.12", optional = true }
argon2 = { version = "0.5", optional = true, features = ["std"] }
uuid = { version = "1", features = ["v4","v7","std"], optional = true }
image = { version = "0.24", optional = true, default-features = false, features = ["png","jpeg","gif","tiff","bmp","webp"] }
hound = { version = "3", optional = true }
symphonia = { version = "0.5", optional = true, default-features = false, features = ["aac","mp3","flac","vorbis","isomp4","ogg","wav","pcm"] }

[features]
default = [
  "core", "string", "math", "algebra", "list", "assoc", "logic", "concurrency", "schema", "explain",
  "tools", "io", "dataset", "db", "containers", "graphs", "crypto", "image", "visual", "audio", "media", "text",
  "collections", "ndarray", "ml", "nn", "functional", "package", "time", "logging", "process", "fs",
  "time_cron", "fs_watch", "fs_archive", "module", "project", "git",
  "model", "trace", "metrics", "memory", "policy", "workflow", "vector", "rag", "db_sqlite", "net_https", "dev"
]
module = []
project = []
core = []
string = []
math = []
algebra = []
list = []
assoc = []
logic = []
concurrency = []
schema = []
explain = []
tools = []
testing = []
simd_kernels = []
big-real-rug = ["rug"]
io = []
model = []
trace = []
metrics = []
memory = []
policy = []
dev = []
workflow = []
vector = []
rag = []
net = []
time = []
logging = []
process = []
git = []
fs = []
fs_archive = ["dep:zip","dep:tar","dep:flate2"]
time_cron = ["dep:cron", "time"]
fs_watch = ["dep:notify", "fs"]
net_https = ["net", "reqwest", "rustls", "rustls-pemfile"]
dataset = []
db = []
db_sqlite = ["dep:rusqlite"]
db_duckdb = ["dep:duckdb"]
containers = []
containers_docker = ["dep:bollard","dep:tokio","dep:futures-util","dep:tar","dep:bytes"]
containers_podman = []
containers_containerd = []
containers_k8s = []
graphs = []
graphs_petgraph = []
crypto = ["dep:blake3","dep:sha2","dep:hmac","dep:hkdf","dep:argon2","dep:rand","dep:chacha20poly1305","dep:ed25519-dalek","dep:rand_core","dep:subtle","dep:uuid"]
crypto_sha2 = ["dep:sha2"]
crypto_aes = []
crypto_chacha = ["dep:chacha20poly1305"]
crypto_blake3 = ["dep:blake3"]
crypto_ed25519 = ["dep:ed25519-dalek","dep:rand_core"]
crypto_rsa = []
crypto_x25519 = []
crypto_argon2 = []
crypto_jose = []
crypto_hpke = []
image = ["dep:image"]
visual = ["image"]
image_avif = []
image_heif = []
image_simd = []
image_svg_text = []
audio = ["dep:hound","dep:symphonia"]
audio_mp3 = ["audio"]
audio_ogg_vorbis = ["audio"]
audio_flac = ["audio"]
media = []
text = []
text_fuzzy = ["dep:fuzzy-matcher"]
text_index = ["dep:rusqlite"]
collections = []
ndarray = []
ml = []
nn = []
functional = []
package = []

# Internal feature wiring for optional crates
text_glob = ["dep:ignore"]
text_multipattern = ["dep:aho-corasick"]
text_encoding_detect = ["dep:chardetng", "dep:encoding_rs"]

[dependencies.fuzzy-matcher]
optional = true
version = "0.3"

# tantivy removed; using SQLite FTS5 via rusqlite

[dependencies.rug]
optional = true
version = "1"
